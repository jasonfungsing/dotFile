[user]
	name = Jason Feng
	email = jason@foxlime.io
[includeIf "gitdir:~/Code/siteminder/"]
    path = ~/.siteminder.gitconfig
[credential]
    helper = osxkeychain
[filter "lfs"]
    clean = git lfs clean %f
    smudge = git lfs smudge %f
    required = true
[core]
    excludesfile = ~/.gitignore_global
    ignorecase = false

[mergetool "SublimeMerge"]
    cmd = smerge mergetool \"$BASE\" \"$REMOTE\" \"$LOCAL\" -o \"$MERGED\"
[mergetool "Kaleidoscope"]
    cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" \"$REMOTE\"
    trustexitcode = true
[mergetool]
    keepBackup = false
    prompt = false
[merge]
	tool = Kaleidoscope
	conflictstyle = diff3

[difftool "Kaleidoscope"]
    cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool "SublimeMerge"]
    cmd = smerge mergetool \"$LOCAL\" \"$REMOTE\" -o \"$MERGED\"
[difftool]
    prompt = false
[diff]
    tool = Kaleidoscope
    algorithm = patience

[alias]
    dtk=difftool
    dtkc=difftool --cached
    mtk=mergetool
    mtkc=mergetool --cached

    dts=difftool --tool=SublimeMerge
    dtsc=difftool --tool=SublimeMerge --cached
    mts=mergetool --tool=SublimeMerge
    mtsc=mergetool --tool=SublimeMerge --cached

    dtv = difftool --tool=vimdiff
    dtvc = difftool --tool=vimdiff --cached
    mtv = mergetool --tool=vimdiff
    mtvc = mergetool --tool=vimdiff --cached

    tree = log --branches --remotes --tags --graph --oneline --abbrev-commit --author-date-order --decorate --format=format:'%C(bold blue)%h%C(reset) %C(reset)%C(bold yellow)%d%C(reset) - %C(dim white)%aD (%ar)%C(reset)%n'' %C(bold cyan)%s%C(reset) %C(white)- %an%C(reset)%C(white) <%ae%C(reset)%C(white)>'
    cl = clone
    s = status
    co = checkout
    d = diff
    p = pull --rebase
    ph = push
    aa = add --all
    al = add --patch
    fu = fetch upstream
    rbum = rebase upstream/master
    rbom = rebase origin/master
    cm = commit -m
    ca = commit --amend
    b = branch
    bd = branch -d
    bD = branch -D
    clean = "git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done"

[push]
    default = simple
